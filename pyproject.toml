[tool.poetry]
name = "nautobot-dns-models"
version = "0.1.0"
description = "Nautobot DNS Models"
authors = ["Network to Code, LLC <info@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/nautobot/nautobot-plugin-dns-models"
repository = "https://github.com/nautobot/nautobot-plugin-dns-models"
keywords = ["nautobot", "nautobot-plugin"]
include = ["LICENSE", "README.md"]
packages = [{ include = "nautobot_dns_models" }]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
# Used for local development
nautobot = {version = "^2.1.0", optional = true}

[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
coverage = "*"
django-debug-toolbar = "*"
# we need to pin flake8 because of package dependencies that cause it to downgrade and
# therefore cause issues with linting since older versions do not take .flake8 as config
flake8 = "^3.9.2"
invoke = "*"
ipython = "*"
pylint = "*"
pylint-django = "*"
pylint-nautobot = "*"
ruff = "*"
pytest = "*"
yamllint = "*"
Markdown = "*"
toml = "*"
# Rendering docs to HTML
mkdocs = "1.3.1"
# Material for MkDocs theme
mkdocs-material = "8.4.2"
# Render custom markdown for version added/changed/remove notes
mkdocs-version-annotations = "1.0.0"
# Automatic documentation from sources, for MkDocs
mkdocstrings = "0.19"
mkdocstrings-python = "0.7.1"

[tool.poetry.extras]
nautobot = ["nautobot"]

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins = ["pylint_django", "pylint_nautobot"]
ignore = ".venv"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx = "^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pylint-nautobot]
supported_nautobot_versions = ["2"]

[tool.ruff]
line-length = 120
target-version = "py38"

[tool.ruff.lint]
select = [
    "D",  # pydocstyle
]
ignore = [
    # warning: `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible.
    "D203",  # 1 blank line required before class docstring

    # D212 is enabled by default in google convention, and complains if we have a docstring like:
    # """
    # My docstring is on the line after the opening quotes instead of on the same line as them.
    # """
    # We've discussed and concluded that we consider this to be a valid style choice.
    "D212",  # Multi-line docstring summary should start at the first line
    "D213",  # Multi-line docstring summary should start at the second line

    # Produces a lot of issues in the current codebase.
    "D401",  # First line of docstring should be in imperative mood
    "D407",  # Missing dashed underline after section
    "D416",  # Section name ends in colon
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"nautobot_dns_models/migrations/*" = [
    "D",  # pydocstyle
]
"nautobot_dns_models/tests/*" = [
    "D",  # pydocstyle
]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-vv --doctest-modules"
